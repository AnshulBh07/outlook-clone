[{"D:\\React projects\\email-client\\src\\index.js":"1","D:\\React projects\\email-client\\src\\App.js":"2","D:\\React projects\\email-client\\src\\components\\FilterBand.jsx":"3","D:\\React projects\\email-client\\src\\components\\EmailList.jsx":"4","D:\\React projects\\email-client\\src\\services\\EmailList.js":"5","D:\\React projects\\email-client\\src\\components\\EmailCard.jsx":"6","D:\\React projects\\email-client\\src\\services\\formatDate.js":"7","D:\\React projects\\email-client\\src\\components\\EmailBody.jsx":"8","D:\\React projects\\email-client\\src\\services\\EmailBody.js":"9","D:\\React projects\\email-client\\src\\store.js":"10","D:\\React projects\\email-client\\src\\reducers\\mainReducer.js":"11","D:\\React projects\\email-client\\src\\actions\\favouriteActions.js":"12","D:\\React projects\\email-client\\src\\actions\\readActions.js":"13","D:\\React projects\\email-client\\src\\custom-hooks\\pagination.js":"14"},{"size":358,"mtime":1697972205867,"results":"15","hashOfConfig":"16"},{"size":665,"mtime":1697984067161,"results":"17","hashOfConfig":"16"},{"size":917,"mtime":1697983861814,"results":"18","hashOfConfig":"16"},{"size":3906,"mtime":1697984276252,"results":"19","hashOfConfig":"16"},{"size":341,"mtime":1697962317752,"results":"20","hashOfConfig":"16"},{"size":1736,"mtime":1697983723260,"results":"21","hashOfConfig":"16"},{"size":172,"mtime":1697963709534,"results":"22","hashOfConfig":"16"},{"size":1902,"mtime":1697983748378,"results":"23","hashOfConfig":"16"},{"size":327,"mtime":1697967062703,"results":"24","hashOfConfig":"16"},{"size":240,"mtime":1697972103954,"results":"25","hashOfConfig":"16"},{"size":710,"mtime":1697975514915,"results":"26","hashOfConfig":"16"},{"size":192,"mtime":1697973917413,"results":"27","hashOfConfig":"16"},{"size":93,"mtime":1697975490224,"results":"28","hashOfConfig":"16"},{"size":1946,"mtime":1697977197142,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1k5wfzg",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React projects\\email-client\\src\\index.js",[],[],["74"],"D:\\React projects\\email-client\\src\\App.js",[],[],"D:\\React projects\\email-client\\src\\components\\FilterBand.jsx",[],[],"D:\\React projects\\email-client\\src\\components\\EmailList.jsx",["75","76"],[],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getEmailList } from \"../services/EmailList\";\r\nimport EmailCard from \"./EmailCard\";\r\nimport \"../styles/emailListStyles.css\";\r\nimport { useState } from \"react\";\r\nimport EmailBody from \"./EmailBody\";\r\nimport { FaGreaterThan } from \"react-icons/fa\";\r\nimport { usePagination } from \"../custom-hooks/pagination\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction EmailList({ filter }) {\r\n  const [mailData, setMailData] = useState([]);\r\n  const [bodyVars, setBodyVars] = useState({\r\n    id: null,\r\n    subject: \"\",\r\n    initials: \"\",\r\n    date: null,\r\n  });\r\n  const [currPage, setCurrPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchAllEmails = async () => {\r\n      const data = await getEmailList();\r\n      setMailData(data);\r\n    };\r\n\r\n    fetchAllEmails();\r\n  }, []);\r\n\r\n  const readMails = useSelector((store) => store.main.read);\r\n  const favMails = useSelector((store) => store.main.favs);\r\n\r\n  //logic to filter data based on filter selected\r\n  function isPresent(val, arr) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (val === arr[i]) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  var filteredData = [];\r\n  if (filter === \"Read\") {\r\n    for (var i = 0; i < mailData.length; i++) {\r\n      if (isPresent(mailData[i].id, readMails)) filteredData.push(mailData[i]);\r\n    }\r\n  } else if (filter === \"All\") {\r\n    filteredData = mailData;\r\n  } else if (filter === \"Favourites\") {\r\n    for (var i = 0; i < mailData.length; i++) {\r\n      if (isPresent(mailData[i].id, favMails)) filteredData.push(mailData[i]);\r\n    }\r\n  } else if (filter === \"Unread\") {\r\n    for (var i = 0; i < mailData.length; i++) {\r\n      if (!isPresent(mailData[i].id, readMails)) filteredData.push(mailData[i]);\r\n    }\r\n  }\r\n\r\n  const range = usePagination({\r\n    totalCount: filteredData.length,\r\n    pageSize: 5,\r\n    currentPage: currPage,\r\n  });\r\n\r\n  const totalPages = Math.ceil(filteredData.length / 5);\r\n\r\n  // slice this data as per page\r\n  const data = filteredData.slice((currPage - 1) * 5, currPage * 5);\r\n\r\n  return (\r\n    <section className=\"section__emails\">\r\n      <div className=\"emails-list\" style={bodyVars.id && { width: \"40%\" }}>\r\n        <div className=\"mails-container\">\r\n          {data.map((item, index) => {\r\n            return (\r\n              <EmailCard item={item} key={index} setBodyVars={setBodyVars} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"pagination-bar\">\r\n          <button\r\n            className=\"next-page-btn\"\r\n            onClick={() => {\r\n              setCurrPage(currPage - 1);\r\n              window.scrollTo(0, 300);\r\n            }}\r\n            disabled={currPage === 1}\r\n          >\r\n            <FaGreaterThan className=\"prev-icon\" />\r\n          </button>\r\n          {range.map((item, index) => {\r\n            return (\r\n              <button\r\n                className={`pagination-btn ${item === \"...\" ? \"dots\" : \"\"} ${\r\n                  index + 1 === currPage ? \"btn-active\" : \"\"\r\n                }`}\r\n                key={index}\r\n                onClick={(e) => {\r\n                  setCurrPage(item);\r\n                }}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n          <button\r\n            className=\"next-page-btn\"\r\n            onClick={() => {\r\n              setCurrPage(currPage + 1);\r\n              window.scrollTo(0, 300);\r\n            }}\r\n            disabled={currPage === totalPages}\r\n          >\r\n            <FaGreaterThan className=\"next-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* only show body if a mail is clicked */}\r\n      {bodyVars.id && (\r\n        <div className=\"email-body\" style={bodyVars.id && { width: \"60%\" }}>\r\n          <EmailBody bodyVars={bodyVars} />\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EmailList;\r\n","D:\\React projects\\email-client\\src\\services\\EmailList.js",[],[],"D:\\React projects\\email-client\\src\\components\\EmailCard.jsx",[],[],"D:\\React projects\\email-client\\src\\services\\formatDate.js",[],[],"D:\\React projects\\email-client\\src\\components\\EmailBody.jsx",[],[],"D:\\React projects\\email-client\\src\\services\\EmailBody.js",[],[],"D:\\React projects\\email-client\\src\\store.js",[],[],"D:\\React projects\\email-client\\src\\reducers\\mainReducer.js",[],[],"D:\\React projects\\email-client\\src\\actions\\favouriteActions.js",[],[],"D:\\React projects\\email-client\\src\\actions\\readActions.js",[],[],"D:\\React projects\\email-client\\src\\custom-hooks\\pagination.js",[],[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":50,"column":14,"nodeType":"81","messageId":"82","endLine":50,"endColumn":15},{"ruleId":"79","severity":1,"message":"80","line":54,"column":14,"nodeType":"81","messageId":"82","endLine":54,"endColumn":15},"no-new-object",["83"],"no-redeclare","'i' is already defined.","Identifier","redeclared","no-object-constructor"]
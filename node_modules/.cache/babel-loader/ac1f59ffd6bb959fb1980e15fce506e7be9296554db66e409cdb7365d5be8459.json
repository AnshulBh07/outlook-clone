{"ast":null,"code":"var _jsxFileName = \"D:\\\\React projects\\\\email-client\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { getEmailList } from \"../services/EmailList\";\nimport EmailCard from \"./EmailCard\";\nimport \"../styles/emailListStyles.css\";\nimport { useState } from \"react\";\nimport EmailBody from \"./EmailBody\";\nimport { FaGreaterThan } from \"react-icons/fa\";\nimport { usePagination } from \"../custom-hooks/pagination\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailList({\n  filter\n}) {\n  _s();\n  const [mailData, setMailData] = useState([]);\n  const [bodyVars, setBodyVars] = useState({\n    id: null,\n    subject: \"\",\n    initials: \"\",\n    date: null\n  });\n  const [currPage, setCurrPage] = useState(1);\n  useEffect(() => {\n    const fetchAllEmails = async () => {\n      const data = await getEmailList();\n      setMailData(data);\n    };\n    fetchAllEmails();\n  }, []);\n  const readMails = useSelector(store => store.main.read);\n\n  // function to compare whether the given value is present in array\n  function isPresent(val, arr) {\n    for (var i = 0; i < arr.length(); i++) {\n      if (val === arr[i]) return true;\n    }\n    return false;\n  }\n\n  // filter the data\n  var filteredData = [];\n  if (filter === \"read\") {\n    filteredData = mailData.filter(item => {\n      return isPresent(item.id, readMails);\n    });\n  } else if (filter === \"unread\") {\n    filteredData = mailData.filter(item => {\n      return !isPresent(item.id, readMails);\n    });\n  }\n  const range = usePagination({\n    totalCount: mailData.length,\n    pageSize: 5,\n    currentPage: currPage\n  });\n  const totalPages = Math.ceil(mailData.length / 5);\n\n  // slice this data as per page\n  const data = mailData.slice((currPage - 1) * 5, currPage * 5);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section__emails\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emails-list\",\n      style: bodyVars.id && {\n        width: \"40%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mails-container\",\n        children: data.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(EmailCard, {\n            item: item,\n            setBodyVars: setBodyVars\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-page-btn\",\n          onClick: () => {\n            setCurrPage(currPage - 1);\n            window.scrollTo(0, 300);\n          },\n          disabled: currPage === 1,\n          children: /*#__PURE__*/_jsxDEV(FaGreaterThan, {\n            className: \"prev-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), range.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `pagination-btn ${item === \"...\" ? \"dots\" : \"\"} ${index + 1 === currPage ? \"btn-active\" : \"\"}`,\n            onClick: e => {\n              setCurrPage(item);\n            },\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-page-btn\",\n          onClick: () => {\n            setCurrPage(currPage + 1);\n            window.scrollTo(0, 300);\n          },\n          disabled: currPage === totalPages,\n          children: /*#__PURE__*/_jsxDEV(FaGreaterThan, {\n            className: \"next-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), bodyVars.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-body\",\n      style: bodyVars.id && {\n        width: \"60%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(EmailBody, {\n        bodyVars: bodyVars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"ZRLWEbSb9c/Mj96F+DaEo8RU38s=\", false, function () {\n  return [useSelector, usePagination];\n});\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useEffect","getEmailList","EmailCard","useState","EmailBody","FaGreaterThan","usePagination","useSelector","jsxDEV","_jsxDEV","EmailList","filter","_s","mailData","setMailData","bodyVars","setBodyVars","id","subject","initials","date","currPage","setCurrPage","fetchAllEmails","data","readMails","store","main","read","isPresent","val","arr","i","length","filteredData","item","range","totalCount","pageSize","currentPage","totalPages","Math","ceil","slice","className","children","style","width","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","scrollTo","disabled","e","_c","$RefreshReg$"],"sources":["D:/React projects/email-client/src/components/EmailList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getEmailList } from \"../services/EmailList\";\r\nimport EmailCard from \"./EmailCard\";\r\nimport \"../styles/emailListStyles.css\";\r\nimport { useState } from \"react\";\r\nimport EmailBody from \"./EmailBody\";\r\nimport { FaGreaterThan } from \"react-icons/fa\";\r\nimport { usePagination } from \"../custom-hooks/pagination\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction EmailList({ filter }) {\r\n  const [mailData, setMailData] = useState([]);\r\n  const [bodyVars, setBodyVars] = useState({\r\n    id: null,\r\n    subject: \"\",\r\n    initials: \"\",\r\n    date: null,\r\n  });\r\n  const [currPage, setCurrPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchAllEmails = async () => {\r\n      const data = await getEmailList();\r\n      setMailData(data);\r\n    };\r\n\r\n    fetchAllEmails();\r\n  }, []);\r\n\r\n  const readMails = useSelector((store) => store.main.read);\r\n\r\n  // function to compare whether the given value is present in array\r\n  function isPresent(val, arr) {\r\n    for (var i = 0; i < arr.length(); i++) {\r\n      if (val === arr[i]) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // filter the data\r\n  var filteredData = [];\r\n  if (filter === \"read\") {\r\n    filteredData = mailData.filter((item) => {\r\n      return isPresent(item.id, readMails);\r\n    });\r\n  } else if (filter === \"unread\") {\r\n    filteredData = mailData.filter((item) => {\r\n      return !isPresent(item.id, readMails);\r\n    });\r\n  }\r\n\r\n  const range = usePagination({\r\n    totalCount: mailData.length,\r\n    pageSize: 5,\r\n    currentPage: currPage,\r\n  });\r\n\r\n  const totalPages = Math.ceil(mailData.length / 5);\r\n\r\n  // slice this data as per page\r\n  const data = mailData.slice((currPage - 1) * 5, currPage * 5);\r\n\r\n  return (\r\n    <section className=\"section__emails\">\r\n      <div className=\"emails-list\" style={bodyVars.id && { width: \"40%\" }}>\r\n        <div className=\"mails-container\">\r\n          {data.map((item, index) => {\r\n            return (\r\n              <EmailCard item={item} key={index} setBodyVars={setBodyVars} />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"pagination-bar\">\r\n          <button\r\n            className=\"next-page-btn\"\r\n            onClick={() => {\r\n              setCurrPage(currPage - 1);\r\n              window.scrollTo(0, 300);\r\n            }}\r\n            disabled={currPage === 1}\r\n          >\r\n            <FaGreaterThan className=\"prev-icon\" />\r\n          </button>\r\n          {range.map((item, index) => {\r\n            return (\r\n              <button\r\n                className={`pagination-btn ${item === \"...\" ? \"dots\" : \"\"} ${\r\n                  index + 1 === currPage ? \"btn-active\" : \"\"\r\n                }`}\r\n                key={index}\r\n                onClick={(e) => {\r\n                  setCurrPage(item);\r\n                }}\r\n              >\r\n                {item}\r\n              </button>\r\n            );\r\n          })}\r\n          <button\r\n            className=\"next-page-btn\"\r\n            onClick={() => {\r\n              setCurrPage(currPage + 1);\r\n              window.scrollTo(0, 300);\r\n            }}\r\n            disabled={currPage === totalPages}\r\n          >\r\n            <FaGreaterThan className=\"next-icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* only show body if a mail is clicked */}\r\n      {bodyVars.id && (\r\n        <div className=\"email-body\" style={bodyVars.id && { width: \"60%\" }}>\r\n          <EmailBody bodyVars={bodyVars} />\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default EmailList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}